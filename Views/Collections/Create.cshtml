@model Live_Quiz.Models.Collection

@{
    ViewBag.Title = "Create Collection";
}

<h2 class="text-center" data-aos="zoom-in-left" data-aos-delay="1500">@ViewBag.Title</h2>
@ViewBag.error
@ViewBag.model
@using (Html.BeginForm("Create", "Collections", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card w-75 m-auto text-center">
        <h4 class="card-header text-center" data-aos="zoom-in-right" data-aos-delay="1400">Collection Details</h4>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>



            <div class="form-group">
                <div class="custom-checkbox">
                    @Html.LabelFor(model => model.isPublic, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.isPublic, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                @Html.ValidationMessageFor(model => model.isPublic, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Image">Upload Image</label>
                <input type="file" class="form-control" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                <p class="alert alert-danger " id="fileError" style="display: none;">Only image is allowed.</p>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">

                <button type="submit" id="fileSubmit" class="btn btn-block btn-outline-success">Create</button>

            </div>
        </div>
    </div>
}

@if (ViewBag.noFile != null)
{
    <div class="w-75 m-auto alert alert-danger text-center">
        @ViewBag.noFile 
    </div>
}
<div class="w-75 m-auto alert alert-info text-center">
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "alert alert-info text-center" })
</div>
<script>
    var flag = false;
    function change() {
        flag = !flag;
        $("#isPublic").val(flag);
        //alert($("#isPublic").val());
    }
</script>